/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetYearInReviewOverviewSlide
 */
export interface GetYearInReviewOverviewSlide {
    /**
     * 
     * @type {string}
     * @memberof GetYearInReviewOverviewSlide
     */
    url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetYearInReviewOverviewSlide
     */
    subtitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetYearInReviewOverviewSlide
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetYearInReviewOverviewSlide
     */
    color?: string | null;
}

/**
 * Check if a given object implements the GetYearInReviewOverviewSlide interface.
 */
export function instanceOfGetYearInReviewOverviewSlide(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetYearInReviewOverviewSlideFromJSON(json: any): GetYearInReviewOverviewSlide {
    return GetYearInReviewOverviewSlideFromJSONTyped(json, false);
}

export function GetYearInReviewOverviewSlideFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetYearInReviewOverviewSlide {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'subtitle': !exists(json, 'subtitle') ? undefined : json['subtitle'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'color': !exists(json, 'color') ? undefined : json['color'],
    };
}

export function GetYearInReviewOverviewSlideToJSON(value?: GetYearInReviewOverviewSlide | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'subtitle': value.subtitle,
        'description': value.description,
        'color': value.color,
    };
}

