/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranscriptionSegment
 */
export interface TranscriptionSegment {
    /**
     * 
     * @type {number}
     * @memberof TranscriptionSegment
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof TranscriptionSegment
     */
    start?: number;
    /**
     * 
     * @type {number}
     * @memberof TranscriptionSegment
     */
    end?: number;
    /**
     * 
     * @type {string}
     * @memberof TranscriptionSegment
     */
    text?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof TranscriptionSegment
     */
    isHeader?: boolean;
}

/**
 * Check if a given object implements the TranscriptionSegment interface.
 */
export function instanceOfTranscriptionSegment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TranscriptionSegmentFromJSON(json: any): TranscriptionSegment {
    return TranscriptionSegmentFromJSONTyped(json, false);
}

export function TranscriptionSegmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranscriptionSegment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'start': !exists(json, 'start') ? undefined : json['start'],
        'end': !exists(json, 'end') ? undefined : json['end'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'isHeader': !exists(json, 'is_header') ? undefined : json['is_header'],
    };
}

export function TranscriptionSegmentToJSON(value?: TranscriptionSegment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'start': value.start,
        'end': value.end,
        'text': value.text,
        'is_header': value.isHeader,
    };
}

