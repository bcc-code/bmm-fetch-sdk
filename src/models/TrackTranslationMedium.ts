/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MediaTypeEnum } from './MediaTypeEnum';
import {
    MediaTypeEnumFromJSON,
    MediaTypeEnumFromJSONTyped,
    MediaTypeEnumToJSON,
} from './MediaTypeEnum';
import type { TrackTranslationMediumFile } from './TrackTranslationMediumFile';
import {
    TrackTranslationMediumFileFromJSON,
    TrackTranslationMediumFileFromJSONTyped,
    TrackTranslationMediumFileToJSON,
} from './TrackTranslationMediumFile';

/**
 * 
 * @export
 * @interface TrackTranslationMedium
 */
export interface TrackTranslationMedium {
    /**
     * 
     * @type {MediaTypeEnum}
     * @memberof TrackTranslationMedium
     */
    type?: MediaTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof TrackTranslationMedium
     */
    isVisible?: boolean;
    /**
     * 
     * @type {Array<TrackTranslationMediumFile>}
     * @memberof TrackTranslationMedium
     */
    files?: Array<TrackTranslationMediumFile> | null;
}

/**
 * Check if a given object implements the TrackTranslationMedium interface.
 */
export function instanceOfTrackTranslationMedium(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackTranslationMediumFromJSON(json: any): TrackTranslationMedium {
    return TrackTranslationMediumFromJSONTyped(json, false);
}

export function TrackTranslationMediumFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackTranslationMedium {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : MediaTypeEnumFromJSON(json['type']),
        'isVisible': !exists(json, 'is_visible') ? undefined : json['is_visible'],
        'files': !exists(json, 'files') ? undefined : (json['files'] === null ? null : (json['files'] as Array<any>).map(TrackTranslationMediumFileFromJSON)),
    };
}

export function TrackTranslationMediumToJSON(value?: TrackTranslationMedium | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': MediaTypeEnumToJSON(value.type),
        'is_visible': value.isVisible,
        'files': value.files === undefined ? undefined : (value.files === null ? null : (value.files as Array<any>).map(TrackTranslationMediumFileToJSON)),
    };
}

