/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StoreQuestionResponseCommand
 */
export interface StoreQuestionResponseCommand {
    /**
     * 
     * @type {number}
     * @memberof StoreQuestionResponseCommand
     */
    questionId?: number;
    /**
     * 
     * @type {string}
     * @memberof StoreQuestionResponseCommand
     */
    initialAnswerId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof StoreQuestionResponseCommand
     */
    finalAnswerId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof StoreQuestionResponseCommand
     */
    tries?: number;
}

/**
 * Check if a given object implements the StoreQuestionResponseCommand interface.
 */
export function instanceOfStoreQuestionResponseCommand(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StoreQuestionResponseCommandFromJSON(json: any): StoreQuestionResponseCommand {
    return StoreQuestionResponseCommandFromJSONTyped(json, false);
}

export function StoreQuestionResponseCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreQuestionResponseCommand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'questionId': !exists(json, 'question_id') ? undefined : json['question_id'],
        'initialAnswerId': !exists(json, 'initial_answer_id') ? undefined : json['initial_answer_id'],
        'finalAnswerId': !exists(json, 'final_answer_id') ? undefined : json['final_answer_id'],
        'tries': !exists(json, 'tries') ? undefined : json['tries'],
    };
}

export function StoreQuestionResponseCommandToJSON(value?: StoreQuestionResponseCommand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'question_id': value.questionId,
        'initial_answer_id': value.initialAnswerId,
        'final_answer_id': value.finalAnswerId,
        'tries': value.tries,
    };
}

