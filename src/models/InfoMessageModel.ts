/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InfoMessageModel
 */
export interface InfoMessageModel {
    /**
     * 
     * @type {number}
     * @memberof InfoMessageModel
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof InfoMessageModel
     */
    readonly type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InfoMessageModel
     */
    translatedMessage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InfoMessageModel
     */
    translationParent?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InfoMessageModel
     */
    translationId?: string | null;
}

/**
 * Check if a given object implements the InfoMessageModel interface.
 */
export function instanceOfInfoMessageModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InfoMessageModelFromJSON(json: any): InfoMessageModel {
    return InfoMessageModelFromJSONTyped(json, false);
}

export function InfoMessageModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): InfoMessageModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'translatedMessage': !exists(json, 'translated_message') ? undefined : json['translated_message'],
        'translationParent': !exists(json, 'translation_parent') ? undefined : json['translation_parent'],
        'translationId': !exists(json, 'translation_id') ? undefined : json['translation_id'],
    };
}

export function InfoMessageModelToJSON(value?: InfoMessageModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'translated_message': value.translatedMessage,
        'translation_parent': value.translationParent,
        'translation_id': value.translationId,
    };
}

