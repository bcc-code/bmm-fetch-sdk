/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LyricsVerse } from './LyricsVerse';
import {
    LyricsVerseFromJSON,
    LyricsVerseFromJSONTyped,
    LyricsVerseToJSON,
} from './LyricsVerse';
import type { TranscriptionTranscriptionSource } from './TranscriptionTranscriptionSource';
import {
    TranscriptionTranscriptionSourceFromJSON,
    TranscriptionTranscriptionSourceFromJSONTyped,
    TranscriptionTranscriptionSourceToJSON,
} from './TranscriptionTranscriptionSource';

/**
 * 
 * @export
 * @interface Lyrics
 */
export interface Lyrics {
    /**
     * 
     * @type {number}
     * @memberof Lyrics
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Lyrics
     */
    readonly type?: string | null;
    /**
     * 
     * @type {TranscriptionTranscriptionSource}
     * @memberof Lyrics
     */
    source?: TranscriptionTranscriptionSource;
    /**
     * 
     * @type {Array<number>}
     * @memberof Lyrics
     */
    lyricists?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof Lyrics
     */
    composers?: Array<number> | null;
    /**
     * 
     * @type {string}
     * @memberof Lyrics
     */
    shortCopyright?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Lyrics
     */
    longCopyright?: string | null;
    /**
     * 
     * @type {Array<LyricsVerse>}
     * @memberof Lyrics
     */
    verses?: Array<LyricsVerse> | null;
    /**
     * 
     * @type {string}
     * @memberof Lyrics
     */
    modifiedBy?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Lyrics
     */
    modifiedAt?: Date;
}

/**
 * Check if a given object implements the Lyrics interface.
 */
export function instanceOfLyrics(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LyricsFromJSON(json: any): Lyrics {
    return LyricsFromJSONTyped(json, false);
}

export function LyricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Lyrics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'source': !exists(json, 'source') ? undefined : TranscriptionTranscriptionSourceFromJSON(json['source']),
        'lyricists': !exists(json, 'lyricists') ? undefined : json['lyricists'],
        'composers': !exists(json, 'composers') ? undefined : json['composers'],
        'shortCopyright': !exists(json, 'short_copyright') ? undefined : json['short_copyright'],
        'longCopyright': !exists(json, 'long_copyright') ? undefined : json['long_copyright'],
        'verses': !exists(json, 'verses') ? undefined : (json['verses'] === null ? null : (json['verses'] as Array<any>).map(LyricsVerseFromJSON)),
        'modifiedBy': !exists(json, 'modified_by') ? undefined : json['modified_by'],
        'modifiedAt': !exists(json, 'modified_at') ? undefined : (new Date(json['modified_at'])),
    };
}

export function LyricsToJSON(value?: Lyrics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'source': TranscriptionTranscriptionSourceToJSON(value.source),
        'lyricists': value.lyricists,
        'composers': value.composers,
        'short_copyright': value.shortCopyright,
        'long_copyright': value.longCopyright,
        'verses': value.verses === undefined ? undefined : (value.verses === null ? null : (value.verses as Array<any>).map(LyricsVerseToJSON)),
        'modified_by': value.modifiedBy,
        'modified_at': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
    };
}

