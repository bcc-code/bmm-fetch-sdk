/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LanguageEnum } from './LanguageEnum';
import {
    LanguageEnumFromJSON,
    LanguageEnumFromJSONTyped,
    LanguageEnumToJSON,
} from './LanguageEnum';
import type { TrackModelMedium } from './TrackModelMedium';
import {
    TrackModelMediumFromJSON,
    TrackModelMediumFromJSONTyped,
    TrackModelMediumToJSON,
} from './TrackModelMedium';
import type { TrackModelRelation } from './TrackModelRelation';
import {
    TrackModelRelationFromJSON,
    TrackModelRelationFromJSONTyped,
    TrackModelRelationToJSON,
} from './TrackModelRelation';
import type { TrackModelTrackMeta } from './TrackModelTrackMeta';
import {
    TrackModelTrackMetaFromJSON,
    TrackModelTrackMetaFromJSONTyped,
    TrackModelTrackMetaToJSON,
} from './TrackModelTrackMeta';
import type { TrackSubtype } from './TrackSubtype';
import {
    TrackSubtypeFromJSON,
    TrackSubtypeFromJSONTyped,
    TrackSubtypeToJSON,
} from './TrackSubtype';

/**
 * 
 * @export
 * @interface TrackModel
 */
export interface TrackModel {
    /**
     * 
     * @type {string}
     * @memberof TrackModel
     */
    comment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackModel
     */
    cover?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TrackModel
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TrackModel
     */
    isVisible?: boolean;
    /**
     * 
     * @type {number}
     * @memberof TrackModel
     */
    order?: number;
    /**
     * 
     * @type {number}
     * @memberof TrackModel
     */
    parentId?: number;
    /**
     * 
     * @type {Date}
     * @memberof TrackModel
     */
    publishedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TrackModel
     */
    recordedAt?: Date;
    /**
     * 
     * @type {Array<TrackModelRelation>}
     * @memberof TrackModel
     */
    rel?: Array<TrackModelRelation> | null;
    /**
     * 
     * @type {TrackSubtype}
     * @memberof TrackModel
     */
    subtype?: TrackSubtype;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackModel
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {TrackModelTrackMeta}
     * @memberof TrackModel
     */
    meta?: TrackModelTrackMeta;
    /**
     * 
     * @type {string}
     * @memberof TrackModel
     */
    type?: string | null;
    /**
     * 
     * @type {Array<LanguageEnum>}
     * @memberof TrackModel
     */
    languages?: Array<LanguageEnum> | null;
    /**
     * 
     * @type {LanguageEnum}
     * @memberof TrackModel
     */
    language?: LanguageEnum;
    /**
     * 
     * @type {string}
     * @memberof TrackModel
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackModel
     */
    publisher?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackModel
     */
    copyright?: string | null;
    /**
     * 
     * @type {Array<TrackModelMedium>}
     * @memberof TrackModel
     */
    media?: Array<TrackModelMedium> | null;
}

/**
 * Check if a given object implements the TrackModel interface.
 */
export function instanceOfTrackModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackModelFromJSON(json: any): TrackModel {
    return TrackModelFromJSONTyped(json, false);
}

export function TrackModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'cover': !exists(json, 'cover') ? undefined : json['cover'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isVisible': !exists(json, 'is_visible') ? undefined : json['is_visible'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'parentId': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        'publishedAt': !exists(json, 'published_at') ? undefined : (new Date(json['published_at'])),
        'recordedAt': !exists(json, 'recorded_at') ? undefined : (new Date(json['recorded_at'])),
        'rel': !exists(json, 'rel') ? undefined : (json['rel'] === null ? null : (json['rel'] as Array<any>).map(TrackModelRelationFromJSON)),
        'subtype': !exists(json, 'subtype') ? undefined : TrackSubtypeFromJSON(json['subtype']),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'meta': !exists(json, '_meta') ? undefined : TrackModelTrackMetaFromJSON(json['_meta']),
        'type': !exists(json, 'type') ? undefined : json['type'],
        'languages': !exists(json, 'languages') ? undefined : (json['languages'] === null ? null : (json['languages'] as Array<any>).map(LanguageEnumFromJSON)),
        'language': !exists(json, 'language') ? undefined : LanguageEnumFromJSON(json['language']),
        'title': !exists(json, 'title') ? undefined : json['title'],
        'publisher': !exists(json, 'publisher') ? undefined : json['publisher'],
        'copyright': !exists(json, 'copyright') ? undefined : json['copyright'],
        'media': !exists(json, 'media') ? undefined : (json['media'] === null ? null : (json['media'] as Array<any>).map(TrackModelMediumFromJSON)),
    };
}

export function TrackModelToJSON(value?: TrackModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'comment': value.comment,
        'cover': value.cover,
        'id': value.id,
        'is_visible': value.isVisible,
        'order': value.order,
        'parent_id': value.parentId,
        'published_at': value.publishedAt === undefined ? undefined : (value.publishedAt.toISOString()),
        'recorded_at': value.recordedAt === undefined ? undefined : (value.recordedAt.toISOString()),
        'rel': value.rel === undefined ? undefined : (value.rel === null ? null : (value.rel as Array<any>).map(TrackModelRelationToJSON)),
        'subtype': TrackSubtypeToJSON(value.subtype),
        'tags': value.tags,
        '_meta': TrackModelTrackMetaToJSON(value.meta),
        'type': value.type,
        'languages': value.languages === undefined ? undefined : (value.languages === null ? null : (value.languages as Array<any>).map(LanguageEnumToJSON)),
        'language': LanguageEnumToJSON(value.language),
        'title': value.title,
        'publisher': value.publisher,
        'copyright': value.copyright,
        'media': value.media === undefined ? undefined : (value.media === null ? null : (value.media as Array<any>).map(TrackModelMediumToJSON)),
    };
}

