/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NotificationTranslation } from './NotificationTranslation';
import {
    NotificationTranslationFromJSON,
    NotificationTranslationFromJSONTyped,
    NotificationTranslationToJSON,
} from './NotificationTranslation';

/**
 * 
 * @export
 * @interface GeneralNotification
 */
export interface GeneralNotification {
    /**
     * 
     * @type {string}
     * @memberof GeneralNotification
     */
    readonly queueName?: string | null;
    /**
     * 
     * @type {Array<NotificationTranslation>}
     * @memberof GeneralNotification
     */
    translations: Array<NotificationTranslation>;
    /**
     * 
     * @type {Date}
     * @memberof GeneralNotification
     */
    scheduledTime?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof GeneralNotification
     */
    actionUrl?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof GeneralNotification
     */
    filterOutConfirmedListeners?: boolean;
}

/**
 * Check if a given object implements the GeneralNotification interface.
 */
export function instanceOfGeneralNotification(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "translations" in value;

    return isInstance;
}

export function GeneralNotificationFromJSON(json: any): GeneralNotification {
    return GeneralNotificationFromJSONTyped(json, false);
}

export function GeneralNotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralNotification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'queueName': !exists(json, 'queueName') ? undefined : json['queueName'],
        'translations': ((json['translations'] as Array<any>).map(NotificationTranslationFromJSON)),
        'scheduledTime': !exists(json, 'scheduledTime') ? undefined : (json['scheduledTime'] === null ? null : new Date(json['scheduledTime'])),
        'actionUrl': !exists(json, 'actionUrl') ? undefined : json['actionUrl'],
        'filterOutConfirmedListeners': !exists(json, 'filterOutConfirmedListeners') ? undefined : json['filterOutConfirmedListeners'],
    };
}

export function GeneralNotificationToJSON(value?: GeneralNotification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'translations': ((value.translations as Array<any>).map(NotificationTranslationToJSON)),
        'scheduledTime': value.scheduledTime === undefined ? undefined : (value.scheduledTime === null ? null : value.scheduledTime.toISOString()),
        'actionUrl': value.actionUrl,
        'filterOutConfirmedListeners': value.filterOutConfirmedListeners,
    };
}

