/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LanguageEnum } from './LanguageEnum';
import {
    LanguageEnumFromJSON,
    LanguageEnumFromJSONTyped,
    LanguageEnumToJSON,
} from './LanguageEnum';

/**
 * 
 * @export
 * @interface PodcastPodcastTranslation
 */
export interface PodcastPodcastTranslation {
    /**
     * 
     * @type {LanguageEnum}
     * @memberof PodcastPodcastTranslation
     */
    language?: LanguageEnum;
    /**
     * 
     * @type {string}
     * @memberof PodcastPodcastTranslation
     */
    title?: string | null;
}

/**
 * Check if a given object implements the PodcastPodcastTranslation interface.
 */
export function instanceOfPodcastPodcastTranslation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PodcastPodcastTranslationFromJSON(json: any): PodcastPodcastTranslation {
    return PodcastPodcastTranslationFromJSONTyped(json, false);
}

export function PodcastPodcastTranslationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PodcastPodcastTranslation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'language': !exists(json, 'language') ? undefined : LanguageEnumFromJSON(json['language']),
        'title': !exists(json, 'title') ? undefined : json['title'],
    };
}

export function PodcastPodcastTranslationToJSON(value?: PodcastPodcastTranslation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'language': LanguageEnumToJSON(value.language),
        'title': value.title,
    };
}

