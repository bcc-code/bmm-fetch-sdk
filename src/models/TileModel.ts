/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TrackModel } from './TrackModel';
import {
    TrackModelFromJSON,
    TrackModelFromJSONTyped,
    TrackModelToJSON,
} from './TrackModel';

/**
 * 
 * @export
 * @interface TileModel
 */
export interface TileModel {
    /**
     * 
     * @type {number}
     * @memberof TileModel
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TileModel
     */
    readonly type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileModel
     */
    backgroundColor?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileModel
     */
    coverUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileModel
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileModel
     */
    label?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof TileModel
     */
    date?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof TileModel
     */
    subtitle?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TileModel
     */
    percentage?: number;
    /**
     * 
     * @type {string}
     * @memberof TileModel
     */
    showAllLink?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TileModel
     */
    shufflePodcastId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TileModel
     */
    lastPositionInMs?: number | null;
    /**
     * 
     * @type {TrackModel}
     * @memberof TileModel
     */
    track?: TrackModel;
}

/**
 * Check if a given object implements the TileModel interface.
 */
export function instanceOfTileModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TileModelFromJSON(json: any): TileModel {
    return TileModelFromJSONTyped(json, false);
}

export function TileModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TileModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'backgroundColor': !exists(json, 'background_color') ? undefined : json['background_color'],
        'coverUrl': !exists(json, 'cover_url') ? undefined : json['cover_url'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'date': !exists(json, 'date') ? undefined : (json['date'] === null ? null : new Date(json['date'])),
        'subtitle': !exists(json, 'subtitle') ? undefined : json['subtitle'],
        'percentage': !exists(json, 'percentage') ? undefined : json['percentage'],
        'showAllLink': !exists(json, 'show_all_link') ? undefined : json['show_all_link'],
        'shufflePodcastId': !exists(json, 'shuffle_podcast_id') ? undefined : json['shuffle_podcast_id'],
        'lastPositionInMs': !exists(json, 'last_position_in_ms') ? undefined : json['last_position_in_ms'],
        'track': !exists(json, 'track') ? undefined : TrackModelFromJSON(json['track']),
    };
}

export function TileModelToJSON(value?: TileModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'background_color': value.backgroundColor,
        'cover_url': value.coverUrl,
        'title': value.title,
        'label': value.label,
        'date': value.date === undefined ? undefined : (value.date === null ? null : value.date.toISOString()),
        'subtitle': value.subtitle,
        'percentage': value.percentage,
        'show_all_link': value.showAllLink,
        'shuffle_podcast_id': value.shufflePodcastId,
        'last_position_in_ms': value.lastPositionInMs,
        'track': TrackModelToJSON(value.track),
    };
}

