/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AchievementCollection,
    instanceOfAchievementCollection,
    AchievementCollectionFromJSON,
    AchievementCollectionFromJSONTyped,
    AchievementCollectionToJSON,
} from './AchievementCollection';
import {
    ChapterHeader,
    instanceOfChapterHeader,
    ChapterHeaderFromJSON,
    ChapterHeaderFromJSONTyped,
    ChapterHeaderToJSON,
} from './ChapterHeader';

/**
 * @type IAchievementCollectionOrChapterHeader
 * 
 * @export
 */
export type IAchievementCollectionOrChapterHeader = { type: 'achievement_collection' } & AchievementCollection | { type: 'chapter_header' } & ChapterHeader;

export function IAchievementCollectionOrChapterHeaderFromJSON(json: any): IAchievementCollectionOrChapterHeader {
    return IAchievementCollectionOrChapterHeaderFromJSONTyped(json, false);
}

export function IAchievementCollectionOrChapterHeaderFromJSONTyped(json: any, ignoreDiscriminator: boolean): IAchievementCollectionOrChapterHeader {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'achievement_collection':
            return {...AchievementCollectionFromJSONTyped(json, true), type: 'achievement_collection'};
        case 'chapter_header':
            return {...ChapterHeaderFromJSONTyped(json, true), type: 'chapter_header'};
        default:
            throw new Error(`No variant of IAchievementCollectionOrChapterHeader exists with 'type=${json['type']}'`);
    }
}

export function IAchievementCollectionOrChapterHeaderToJSON(value?: IAchievementCollectionOrChapterHeader | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'achievement_collection':
            return AchievementCollectionToJSON(value);
        case 'chapter_header':
            return ChapterHeaderToJSON(value);
        default:
            throw new Error(`No variant of IAchievementCollectionOrChapterHeader exists with 'type=${value['type']}'`);
    }

}

