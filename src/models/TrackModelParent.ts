/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LanguageEnum } from './LanguageEnum';
import {
    LanguageEnumFromJSON,
    LanguageEnumFromJSONTyped,
    LanguageEnumToJSON,
} from './LanguageEnum';
import type { TrackModelParentMeta } from './TrackModelParentMeta';
import {
    TrackModelParentMetaFromJSON,
    TrackModelParentMetaFromJSONTyped,
    TrackModelParentMetaToJSON,
} from './TrackModelParentMeta';

/**
 * 
 * @export
 * @interface TrackModelParent
 */
export interface TrackModelParent {
    /**
     * 
     * @type {TrackModelParentMeta}
     * @memberof TrackModelParent
     */
    meta?: TrackModelParentMeta;
    /**
     * 
     * @type {number}
     * @memberof TrackModelParent
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof TrackModelParent
     */
    parentId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof TrackModelParent
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackModelParent
     */
    bmmId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackModelParent
     */
    cover?: string | null;
    /**
     * 
     * @type {LanguageEnum}
     * @memberof TrackModelParent
     */
    language?: LanguageEnum;
    /**
     * 
     * @type {Array<LanguageEnum>}
     * @memberof TrackModelParent
     */
    languages?: Array<LanguageEnum> | null;
    /**
     * 
     * @type {Date}
     * @memberof TrackModelParent
     */
    publishedAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackModelParent
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof TrackModelParent
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackModelParent
     */
    description?: string | null;
}

/**
 * Check if a given object implements the TrackModelParent interface.
 */
export function instanceOfTrackModelParent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackModelParentFromJSON(json: any): TrackModelParent {
    return TrackModelParentFromJSONTyped(json, false);
}

export function TrackModelParentFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackModelParent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'meta': !exists(json, '_meta') ? undefined : TrackModelParentMetaFromJSON(json['_meta']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'parentId': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'bmmId': !exists(json, 'bmm_id') ? undefined : json['bmm_id'],
        'cover': !exists(json, 'cover') ? undefined : json['cover'],
        'language': !exists(json, 'language') ? undefined : LanguageEnumFromJSON(json['language']),
        'languages': !exists(json, 'languages') ? undefined : (json['languages'] === null ? null : (json['languages'] as Array<any>).map(LanguageEnumFromJSON)),
        'publishedAt': !exists(json, 'published_at') ? undefined : (new Date(json['published_at'])),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function TrackModelParentToJSON(value?: TrackModelParent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_meta': TrackModelParentMetaToJSON(value.meta),
        'id': value.id,
        'parent_id': value.parentId,
        'type': value.type,
        'bmm_id': value.bmmId,
        'cover': value.cover,
        'language': LanguageEnumToJSON(value.language),
        'languages': value.languages === undefined ? undefined : (value.languages === null ? null : (value.languages as Array<any>).map(LanguageEnumToJSON)),
        'published_at': value.publishedAt === undefined ? undefined : (value.publishedAt.toISOString()),
        'tags': value.tags,
        'title': value.title,
        'description': value.description,
    };
}

