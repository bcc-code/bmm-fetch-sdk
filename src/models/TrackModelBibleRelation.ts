/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BibleBookEnum } from './BibleBookEnum';
import {
    BibleBookEnumFromJSON,
    BibleBookEnumFromJSONTyped,
    BibleBookEnumToJSON,
} from './BibleBookEnum';

/**
 * 
 * @export
 * @interface TrackModelBibleRelation
 */
export interface TrackModelBibleRelation {
    /**
     * 
     * @type {BibleBookEnum}
     * @memberof TrackModelBibleRelation
     */
    book?: BibleBookEnum;
    /**
     * 
     * @type {number}
     * @memberof TrackModelBibleRelation
     */
    chapter?: number;
    /**
     * 
     * @type {number}
     * @memberof TrackModelBibleRelation
     */
    verse?: number;
    /**
     * 
     * @type {string}
     * @memberof TrackModelBibleRelation
     */
    comment?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TrackModelBibleRelation
     */
    timestamp?: number | null;
}

/**
 * Check if a given object implements the TrackModelBibleRelation interface.
 */
export function instanceOfTrackModelBibleRelation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackModelBibleRelationFromJSON(json: any): TrackModelBibleRelation {
    return TrackModelBibleRelationFromJSONTyped(json, false);
}

export function TrackModelBibleRelationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackModelBibleRelation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'book': !exists(json, 'book') ? undefined : BibleBookEnumFromJSON(json['book']),
        'chapter': !exists(json, 'chapter') ? undefined : json['chapter'],
        'verse': !exists(json, 'verse') ? undefined : json['verse'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
    };
}

export function TrackModelBibleRelationToJSON(value?: TrackModelBibleRelation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'book': BibleBookEnumToJSON(value.book),
        'chapter': value.chapter,
        'verse': value.verse,
        'comment': value.comment,
        'timestamp': value.timestamp,
    };
}

