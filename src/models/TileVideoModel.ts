/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TileVideoModel
 */
export interface TileVideoModel {
    /**
     * 
     * @type {number}
     * @memberof TileVideoModel
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TileVideoModel
     */
    readonly type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileVideoModel
     */
    header?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileVideoModel
     */
    buttonText?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileVideoModel
     */
    buttonUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileVideoModel
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileVideoModel
     */
    subtitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TileVideoModel
     */
    videoFileName?: string | null;
}

/**
 * Check if a given object implements the TileVideoModel interface.
 */
export function instanceOfTileVideoModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TileVideoModelFromJSON(json: any): TileVideoModel {
    return TileVideoModelFromJSONTyped(json, false);
}

export function TileVideoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TileVideoModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'header': !exists(json, 'header') ? undefined : json['header'],
        'buttonText': !exists(json, 'button_text') ? undefined : json['button_text'],
        'buttonUrl': !exists(json, 'button_url') ? undefined : json['button_url'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'subtitle': !exists(json, 'subtitle') ? undefined : json['subtitle'],
        'videoFileName': !exists(json, 'video_file_name') ? undefined : json['video_file_name'],
    };
}

export function TileVideoModelToJSON(value?: TileVideoModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'header': value.header,
        'button_text': value.buttonText,
        'button_url': value.buttonUrl,
        'title': value.title,
        'subtitle': value.subtitle,
        'video_file_name': value.videoFileName,
    };
}

