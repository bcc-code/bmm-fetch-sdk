/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface YearInReviewModel
 */
export interface YearInReviewModel {
    /**
     * 
     * @type {string}
     * @memberof YearInReviewModel
     */
    readonly type: YearInReviewModelTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof YearInReviewModel
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof YearInReviewModel
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof YearInReviewModel
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof YearInReviewModel
     */
    buttonTitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof YearInReviewModel
     */
    buttonLink?: string | null;
    /**
     * 
     * @type {string}
     * @memberof YearInReviewModel
     */
    playlistName?: string | null;
}


/**
 * @export
 */
export const YearInReviewModelTypeEnum = {
    YearInReview: 'year_in_review'
} as const;
export type YearInReviewModelTypeEnum = typeof YearInReviewModelTypeEnum[keyof typeof YearInReviewModelTypeEnum];


/**
 * Check if a given object implements the YearInReviewModel interface.
 */
export function instanceOfYearInReviewModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function YearInReviewModelFromJSON(json: any): YearInReviewModel {
    return YearInReviewModelFromJSONTyped(json, false);
}

export function YearInReviewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): YearInReviewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'buttonTitle': !exists(json, 'button_title') ? undefined : json['button_title'],
        'buttonLink': !exists(json, 'button_link') ? undefined : json['button_link'],
        'playlistName': !exists(json, 'playlist_name') ? undefined : json['playlist_name'],
    };
}

export function YearInReviewModelToJSON(value?: YearInReviewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'description': value.description,
        'button_title': value.buttonTitle,
        'button_link': value.buttonLink,
        'playlist_name': value.playlistName,
    };
}

