/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Podcast } from './Podcast';
import {
    PodcastFromJSON,
    PodcastFromJSONTyped,
    PodcastToJSON,
} from './Podcast';

/**
 * 
 * @export
 * @interface TrackListOverviewVmPodcast
 */
export interface TrackListOverviewVmPodcast {
    /**
     * 
     * @type {Array<Podcast>}
     * @memberof TrackListOverviewVmPodcast
     */
    published?: Array<Podcast> | null;
    /**
     * 
     * @type {Array<Podcast>}
     * @memberof TrackListOverviewVmPodcast
     */
    unpublished?: Array<Podcast> | null;
}

/**
 * Check if a given object implements the TrackListOverviewVmPodcast interface.
 */
export function instanceOfTrackListOverviewVmPodcast(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackListOverviewVmPodcastFromJSON(json: any): TrackListOverviewVmPodcast {
    return TrackListOverviewVmPodcastFromJSONTyped(json, false);
}

export function TrackListOverviewVmPodcastFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackListOverviewVmPodcast {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'published': !exists(json, 'published') ? undefined : (json['published'] === null ? null : (json['published'] as Array<any>).map(PodcastFromJSON)),
        'unpublished': !exists(json, 'unpublished') ? undefined : (json['unpublished'] === null ? null : (json['unpublished'] as Array<any>).map(PodcastFromJSON)),
    };
}

export function TrackListOverviewVmPodcastToJSON(value?: TrackListOverviewVmPodcast | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'published': value.published === undefined ? undefined : (value.published === null ? null : (value.published as Array<any>).map(PodcastToJSON)),
        'unpublished': value.unpublished === undefined ? undefined : (value.unpublished === null ? null : (value.unpublished as Array<any>).map(PodcastToJSON)),
    };
}

