/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AlbumModel } from './AlbumModel';
import {
    AlbumModelFromJSON,
    AlbumModelFromJSONTyped,
    AlbumModelToJSON,
} from './AlbumModel';
import type { ContributorModel } from './ContributorModel';
import {
    ContributorModelFromJSON,
    ContributorModelFromJSONTyped,
    ContributorModelToJSON,
} from './ContributorModel';
import type { PlaylistModel } from './PlaylistModel';
import {
    PlaylistModelFromJSON,
    PlaylistModelFromJSONTyped,
    PlaylistModelToJSON,
} from './PlaylistModel';
import type { TrackModel } from './TrackModel';
import {
    TrackModelFromJSON,
    TrackModelFromJSONTyped,
    TrackModelToJSON,
} from './TrackModel';

/**
 * 
 * @export
 * @interface RecommendationModel
 */
export interface RecommendationModel {
    /**
     * 
     * @type {string}
     * @memberof RecommendationModel
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RecommendationModel
     */
    subtitle?: string | null;
    /**
     * 
     * @type {ContributorModel}
     * @memberof RecommendationModel
     */
    contributor?: ContributorModel;
    /**
     * 
     * @type {TrackModel}
     * @memberof RecommendationModel
     */
    track?: TrackModel;
    /**
     * 
     * @type {PlaylistModel}
     * @memberof RecommendationModel
     */
    playlist?: PlaylistModel;
    /**
     * 
     * @type {AlbumModel}
     * @memberof RecommendationModel
     */
    album?: AlbumModel;
    /**
     * 
     * @type {number}
     * @memberof RecommendationModel
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof RecommendationModel
     */
    readonly type: RecommendationModelTypeEnum;
}


/**
 * @export
 */
export const RecommendationModelTypeEnum = {
    Recommendation: 'recommendation'
} as const;
export type RecommendationModelTypeEnum = typeof RecommendationModelTypeEnum[keyof typeof RecommendationModelTypeEnum];


/**
 * Check if a given object implements the RecommendationModel interface.
 */
export function instanceOfRecommendationModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function RecommendationModelFromJSON(json: any): RecommendationModel {
    return RecommendationModelFromJSONTyped(json, false);
}

export function RecommendationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecommendationModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'subtitle': !exists(json, 'subtitle') ? undefined : json['subtitle'],
        'contributor': !exists(json, 'contributor') ? undefined : ContributorModelFromJSON(json['contributor']),
        'track': !exists(json, 'track') ? undefined : TrackModelFromJSON(json['track']),
        'playlist': !exists(json, 'playlist') ? undefined : PlaylistModelFromJSON(json['playlist']),
        'album': !exists(json, 'album') ? undefined : AlbumModelFromJSON(json['album']),
        'id': json['id'],
        'type': json['type'],
    };
}

export function RecommendationModelToJSON(value?: RecommendationModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'subtitle': value.subtitle,
        'contributor': ContributorModelToJSON(value.contributor),
        'track': TrackModelToJSON(value.track),
        'playlist': PlaylistModelToJSON(value.playlist),
        'album': AlbumModelToJSON(value.album),
        'id': value.id,
    };
}

