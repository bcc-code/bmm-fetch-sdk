/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TrackReference } from './TrackReference';
import {
    TrackReferenceFromJSON,
    TrackReferenceFromJSONTyped,
    TrackReferenceToJSON,
} from './TrackReference';

/**
 * 
 * @export
 * @interface CreateTrackCollectionCommand
 */
export interface CreateTrackCollectionCommand {
    /**
     * 
     * @type {string}
     * @memberof CreateTrackCollectionCommand
     */
    name?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateTrackCollectionCommand
     * @deprecated
     */
    access?: Array<string> | null;
    /**
     * 
     * @type {Array<TrackReference>}
     * @memberof CreateTrackCollectionCommand
     */
    trackReferences?: Array<TrackReference> | null;
}

/**
 * Check if a given object implements the CreateTrackCollectionCommand interface.
 */
export function instanceOfCreateTrackCollectionCommand(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateTrackCollectionCommandFromJSON(json: any): CreateTrackCollectionCommand {
    return CreateTrackCollectionCommandFromJSONTyped(json, false);
}

export function CreateTrackCollectionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTrackCollectionCommand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'access': !exists(json, 'access') ? undefined : json['access'],
        'trackReferences': !exists(json, 'trackReferences') ? undefined : (json['trackReferences'] === null ? null : (json['trackReferences'] as Array<any>).map(TrackReferenceFromJSON)),
    };
}

export function CreateTrackCollectionCommandToJSON(value?: CreateTrackCollectionCommand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'access': value.access,
        'trackReferences': value.trackReferences === undefined ? undefined : (value.trackReferences === null ? null : (value.trackReferences as Array<any>).map(TrackReferenceToJSON)),
    };
}

