/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Highlighting } from './Highlighting';
import {
    HighlightingFromJSON,
    HighlightingFromJSONTyped,
    HighlightingToJSON,
} from './Highlighting';
import type { IAlbumContributorPodcastPlaylistOrTrack } from './IAlbumContributorPodcastPlaylistOrTrack';
import {
    IAlbumContributorPodcastPlaylistOrTrackFromJSON,
    IAlbumContributorPodcastPlaylistOrTrackFromJSONTyped,
    IAlbumContributorPodcastPlaylistOrTrackToJSON,
} from './IAlbumContributorPodcastPlaylistOrTrack';

/**
 * 
 * @export
 * @interface SearchResults
 */
export interface SearchResults {
    /**
     * 
     * @type {number}
     * @memberof SearchResults
     */
    nextPageFromPosition?: number;
    /**
     * 
     * @type {Array<IAlbumContributorPodcastPlaylistOrTrack>}
     * @memberof SearchResults
     */
    items?: Array<IAlbumContributorPodcastPlaylistOrTrack> | null;
    /**
     * 
     * @type {boolean}
     * @memberof SearchResults
     */
    isFullyLoaded?: boolean;
    /**
     * 
     * @type {Array<Highlighting>}
     * @memberof SearchResults
     */
    highlightings?: Array<Highlighting> | null;
}

/**
 * Check if a given object implements the SearchResults interface.
 */
export function instanceOfSearchResults(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SearchResultsFromJSON(json: any): SearchResults {
    return SearchResultsFromJSONTyped(json, false);
}

export function SearchResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nextPageFromPosition': !exists(json, 'next_page_from_position') ? undefined : json['next_page_from_position'],
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(IAlbumContributorPodcastPlaylistOrTrackFromJSON)),
        'isFullyLoaded': !exists(json, 'is_fully_loaded') ? undefined : json['is_fully_loaded'],
        'highlightings': !exists(json, 'highlightings') ? undefined : (json['highlightings'] === null ? null : (json['highlightings'] as Array<any>).map(HighlightingFromJSON)),
    };
}

export function SearchResultsToJSON(value?: SearchResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'next_page_from_position': value.nextPageFromPosition,
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(IAlbumContributorPodcastPlaylistOrTrackToJSON)),
        'is_fully_loaded': value.isFullyLoaded,
        'highlightings': value.highlightings === undefined ? undefined : (value.highlightings === null ? null : (value.highlightings as Array<any>).map(HighlightingToJSON)),
    };
}

