/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AlbumModel,
    instanceOfAlbumModel,
    AlbumModelFromJSON,
    AlbumModelFromJSONTyped,
    AlbumModelToJSON,
} from './AlbumModel';
import {
    ChapterHeader,
    instanceOfChapterHeader,
    ChapterHeaderFromJSON,
    ChapterHeaderFromJSONTyped,
    ChapterHeaderToJSON,
} from './ChapterHeader';
import {
    ContributorModel,
    instanceOfContributorModel,
    ContributorModelFromJSON,
    ContributorModelFromJSONTyped,
    ContributorModelToJSON,
} from './ContributorModel';
import {
    CurrentWeeksStreakVm,
    instanceOfCurrentWeeksStreakVm,
    CurrentWeeksStreakVmFromJSON,
    CurrentWeeksStreakVmFromJSONTyped,
    CurrentWeeksStreakVmToJSON,
} from './CurrentWeeksStreakVm';
import {
    IDocumentWithYear,
    instanceOfIDocumentWithYear,
    IDocumentWithYearFromJSON,
    IDocumentWithYearFromJSONTyped,
    IDocumentWithYearToJSON,
} from './IDocumentWithYear';
import {
    ITileModel,
    instanceOfITileModel,
    ITileModelFromJSON,
    ITileModelFromJSONTyped,
    ITileModelToJSON,
} from './ITileModel';
import {
    InfoMessageModel,
    instanceOfInfoMessageModel,
    InfoMessageModelFromJSON,
    InfoMessageModelFromJSONTyped,
    InfoMessageModelToJSON,
} from './InfoMessageModel';
import {
    PlaylistModel,
    instanceOfPlaylistModel,
    PlaylistModelFromJSON,
    PlaylistModelFromJSONTyped,
    PlaylistModelToJSON,
} from './PlaylistModel';
import {
    PodcastModel,
    instanceOfPodcastModel,
    PodcastModelFromJSON,
    PodcastModelFromJSONTyped,
    PodcastModelToJSON,
} from './PodcastModel';
import {
    SectionHeaderModel,
    instanceOfSectionHeaderModel,
    SectionHeaderModelFromJSON,
    SectionHeaderModelFromJSONTyped,
    SectionHeaderModelToJSON,
} from './SectionHeaderModel';
import {
    TileMessageModel,
    instanceOfTileMessageModel,
    TileMessageModelFromJSON,
    TileMessageModelFromJSONTyped,
    TileMessageModelToJSON,
} from './TileMessageModel';
import {
    TileModel,
    instanceOfTileModel,
    TileModelFromJSON,
    TileModelFromJSONTyped,
    TileModelToJSON,
} from './TileModel';
import {
    TileVideoModel,
    instanceOfTileVideoModel,
    TileVideoModelFromJSON,
    TileVideoModelFromJSONTyped,
    TileVideoModelToJSON,
} from './TileVideoModel';
import {
    TrackCollectionModel,
    instanceOfTrackCollectionModel,
    TrackCollectionModelFromJSON,
    TrackCollectionModelFromJSONTyped,
    TrackCollectionModelToJSON,
} from './TrackCollectionModel';
import {
    TrackModel,
    instanceOfTrackModel,
    TrackModelFromJSON,
    TrackModelFromJSONTyped,
    TrackModelToJSON,
} from './TrackModel';
import {
    YearInReviewModel,
    instanceOfYearInReviewModel,
    YearInReviewModelFromJSON,
    YearInReviewModelFromJSONTyped,
    YearInReviewModelToJSON,
} from './YearInReviewModel';

/**
 * @type BrowseGet200ResponseInner
 * 
 * @export
 */
export type BrowseGet200ResponseInner = AlbumModel | ChapterHeader | ContributorModel | CurrentWeeksStreakVm | IDocumentWithYear | ITileModel | InfoMessageModel | PlaylistModel | PodcastModel | SectionHeaderModel | TileMessageModel | TileModel | TileVideoModel | TrackCollectionModel | TrackModel | YearInReviewModel;

export function BrowseGet200ResponseInnerFromJSON(json: any): BrowseGet200ResponseInner {
    return BrowseGet200ResponseInnerFromJSONTyped(json, false);
}

export function BrowseGet200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrowseGet200ResponseInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...AlbumModelFromJSONTyped(json, true), ...ChapterHeaderFromJSONTyped(json, true), ...ContributorModelFromJSONTyped(json, true), ...CurrentWeeksStreakVmFromJSONTyped(json, true), ...IDocumentWithYearFromJSONTyped(json, true), ...ITileModelFromJSONTyped(json, true), ...InfoMessageModelFromJSONTyped(json, true), ...PlaylistModelFromJSONTyped(json, true), ...PodcastModelFromJSONTyped(json, true), ...SectionHeaderModelFromJSONTyped(json, true), ...TileMessageModelFromJSONTyped(json, true), ...TileModelFromJSONTyped(json, true), ...TileVideoModelFromJSONTyped(json, true), ...TrackCollectionModelFromJSONTyped(json, true), ...TrackModelFromJSONTyped(json, true), ...YearInReviewModelFromJSONTyped(json, true) };
}

export function BrowseGet200ResponseInnerToJSON(value?: BrowseGet200ResponseInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfAlbumModel(value)) {
        return AlbumModelToJSON(value as AlbumModel);
    }
    if (instanceOfChapterHeader(value)) {
        return ChapterHeaderToJSON(value as ChapterHeader);
    }
    if (instanceOfContributorModel(value)) {
        return ContributorModelToJSON(value as ContributorModel);
    }
    if (instanceOfCurrentWeeksStreakVm(value)) {
        return CurrentWeeksStreakVmToJSON(value as CurrentWeeksStreakVm);
    }
    if (instanceOfIDocumentWithYear(value)) {
        return IDocumentWithYearToJSON(value as IDocumentWithYear);
    }
    if (instanceOfITileModel(value)) {
        return ITileModelToJSON(value as ITileModel);
    }
    if (instanceOfInfoMessageModel(value)) {
        return InfoMessageModelToJSON(value as InfoMessageModel);
    }
    if (instanceOfPlaylistModel(value)) {
        return PlaylistModelToJSON(value as PlaylistModel);
    }
    if (instanceOfPodcastModel(value)) {
        return PodcastModelToJSON(value as PodcastModel);
    }
    if (instanceOfSectionHeaderModel(value)) {
        return SectionHeaderModelToJSON(value as SectionHeaderModel);
    }
    if (instanceOfTileMessageModel(value)) {
        return TileMessageModelToJSON(value as TileMessageModel);
    }
    if (instanceOfTileModel(value)) {
        return TileModelToJSON(value as TileModel);
    }
    if (instanceOfTileVideoModel(value)) {
        return TileVideoModelToJSON(value as TileVideoModel);
    }
    if (instanceOfTrackCollectionModel(value)) {
        return TrackCollectionModelToJSON(value as TrackCollectionModel);
    }
    if (instanceOfTrackModel(value)) {
        return TrackModelToJSON(value as TrackModel);
    }
    if (instanceOfYearInReviewModel(value)) {
        return YearInReviewModelToJSON(value as YearInReviewModel);
    }

    return {};
}

