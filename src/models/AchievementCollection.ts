/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AchievementModel } from './AchievementModel';
import {
    AchievementModelFromJSON,
    AchievementModelFromJSONTyped,
    AchievementModelToJSON,
} from './AchievementModel';

/**
 * 
 * @export
 * @interface AchievementCollection
 */
export interface AchievementCollection {
    /**
     * 
     * @type {number}
     * @memberof AchievementCollection
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof AchievementCollection
     */
    readonly type: AchievementCollectionTypeEnum;
    /**
     * 
     * @type {Array<AchievementModel>}
     * @memberof AchievementCollection
     */
    list?: Array<AchievementModel> | null;
}


/**
 * @export
 */
export const AchievementCollectionTypeEnum = {
    AchievementCollection: 'achievement_collection'
} as const;
export type AchievementCollectionTypeEnum = typeof AchievementCollectionTypeEnum[keyof typeof AchievementCollectionTypeEnum];


/**
 * Check if a given object implements the AchievementCollection interface.
 */
export function instanceOfAchievementCollection(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function AchievementCollectionFromJSON(json: any): AchievementCollection {
    return AchievementCollectionFromJSONTyped(json, false);
}

export function AchievementCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AchievementCollection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'list': !exists(json, 'list') ? undefined : (json['list'] === null ? null : (json['list'] as Array<any>).map(AchievementModelFromJSON)),
    };
}

export function AchievementCollectionToJSON(value?: AchievementCollection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'list': value.list === undefined ? undefined : (value.list === null ? null : (value.list as Array<any>).map(AchievementModelToJSON)),
    };
}

