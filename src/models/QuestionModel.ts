/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QuestionAnswer } from './QuestionAnswer';
import {
    QuestionAnswerFromJSON,
    QuestionAnswerFromJSONTyped,
    QuestionAnswerToJSON,
} from './QuestionAnswer';
import type { QuestionQuestionStyle } from './QuestionQuestionStyle';
import {
    QuestionQuestionStyleFromJSON,
    QuestionQuestionStyleFromJSONTyped,
    QuestionQuestionStyleToJSON,
} from './QuestionQuestionStyle';
import type { QuestionShortAnswer } from './QuestionShortAnswer';
import {
    QuestionShortAnswerFromJSON,
    QuestionShortAnswerFromJSONTyped,
    QuestionShortAnswerToJSON,
} from './QuestionShortAnswer';

/**
 * 
 * @export
 * @interface QuestionModel
 */
export interface QuestionModel {
    /**
     * 
     * @type {number}
     * @memberof QuestionModel
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    readonly type: QuestionModelTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    questionImageLink?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    questionText?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    questionSubtext?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    linkUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    linkText?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    solutionTextPlaceholder?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    solutionTextCorrect?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionModel
     */
    solutionTextWrong?: string | null;
    /**
     * 
     * @type {QuestionQuestionStyle}
     * @memberof QuestionModel
     */
    style?: QuestionQuestionStyle;
    /**
     * 
     * @type {Array<QuestionAnswer>}
     * @memberof QuestionModel
     */
    answers?: Array<QuestionAnswer> | null;
    /**
     * 
     * @type {Array<QuestionShortAnswer>}
     * @memberof QuestionModel
     */
    shortAnswers?: Array<QuestionShortAnswer> | null;
}


/**
 * @export
 */
export const QuestionModelTypeEnum = {
    Question: 'question'
} as const;
export type QuestionModelTypeEnum = typeof QuestionModelTypeEnum[keyof typeof QuestionModelTypeEnum];


/**
 * Check if a given object implements the QuestionModel interface.
 */
export function instanceOfQuestionModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function QuestionModelFromJSON(json: any): QuestionModel {
    return QuestionModelFromJSONTyped(json, false);
}

export function QuestionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'questionImageLink': !exists(json, 'question_image_link') ? undefined : json['question_image_link'],
        'questionText': !exists(json, 'question_text') ? undefined : json['question_text'],
        'questionSubtext': !exists(json, 'question_subtext') ? undefined : json['question_subtext'],
        'linkUrl': !exists(json, 'link_url') ? undefined : json['link_url'],
        'linkText': !exists(json, 'link_text') ? undefined : json['link_text'],
        'solutionTextPlaceholder': !exists(json, 'solution_text_placeholder') ? undefined : json['solution_text_placeholder'],
        'solutionTextCorrect': !exists(json, 'solution_text_correct') ? undefined : json['solution_text_correct'],
        'solutionTextWrong': !exists(json, 'solution_text_wrong') ? undefined : json['solution_text_wrong'],
        'style': !exists(json, 'style') ? undefined : QuestionQuestionStyleFromJSON(json['style']),
        'answers': !exists(json, 'answers') ? undefined : (json['answers'] === null ? null : (json['answers'] as Array<any>).map(QuestionAnswerFromJSON)),
        'shortAnswers': !exists(json, 'short_answers') ? undefined : (json['short_answers'] === null ? null : (json['short_answers'] as Array<any>).map(QuestionShortAnswerFromJSON)),
    };
}

export function QuestionModelToJSON(value?: QuestionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'question_image_link': value.questionImageLink,
        'question_text': value.questionText,
        'question_subtext': value.questionSubtext,
        'link_url': value.linkUrl,
        'link_text': value.linkText,
        'solution_text_placeholder': value.solutionTextPlaceholder,
        'solution_text_correct': value.solutionTextCorrect,
        'solution_text_wrong': value.solutionTextWrong,
        'style': QuestionQuestionStyleToJSON(value.style),
        'answers': value.answers === undefined ? undefined : (value.answers === null ? null : (value.answers as Array<any>).map(QuestionAnswerToJSON)),
        'short_answers': value.shortAnswers === undefined ? undefined : (value.shortAnswers === null ? null : (value.shortAnswers as Array<any>).map(QuestionShortAnswerToJSON)),
    };
}

