/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AlbumModelAlbumMeta
 */
export interface AlbumModelAlbumMeta {
    /**
     * 
     * @type {Array<string>}
     * @memberof AlbumModelAlbumMeta
     */
    containedTypes?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof AlbumModelAlbumMeta
     */
    isVisible?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof AlbumModelAlbumMeta
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof AlbumModelAlbumMeta
     */
    modifiedBy?: string | null;
}

/**
 * Check if a given object implements the AlbumModelAlbumMeta interface.
 */
export function instanceOfAlbumModelAlbumMeta(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AlbumModelAlbumMetaFromJSON(json: any): AlbumModelAlbumMeta {
    return AlbumModelAlbumMetaFromJSONTyped(json, false);
}

export function AlbumModelAlbumMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlbumModelAlbumMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'containedTypes': !exists(json, 'contained_types') ? undefined : json['contained_types'],
        'isVisible': !exists(json, 'is_visible') ? undefined : json['is_visible'],
        'modifiedAt': !exists(json, 'modified_at') ? undefined : (new Date(json['modified_at'])),
        'modifiedBy': !exists(json, 'modified_by') ? undefined : json['modified_by'],
    };
}

export function AlbumModelAlbumMetaToJSON(value?: AlbumModelAlbumMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contained_types': value.containedTypes,
        'is_visible': value.isVisible,
        'modified_at': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
        'modified_by': value.modifiedBy,
    };
}

