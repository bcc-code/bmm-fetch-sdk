/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GeneralNotification,
  UpcomingNotificationsModel,
} from '../models';
import {
    GeneralNotificationFromJSON,
    GeneralNotificationToJSON,
    UpcomingNotificationsModelFromJSON,
    UpcomingNotificationsModelToJSON,
} from '../models';

export interface NotificationSendPostRequest {
    generalNotification?: GeneralNotification;
}

export interface NotificationsSendPostRequest {
    generalNotification?: GeneralNotification;
}

/**
 * 
 */
export class NotificationsApi extends runtime.BaseAPI {

    /**
     */
    async notificationNextGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpcomingNotificationsModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Notification/next`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UpcomingNotificationsModelFromJSON(jsonValue));
    }

    /**
     */
    async notificationNextGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpcomingNotificationsModel> {
        const response = await this.notificationNextGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async notificationSendPostRaw(requestParameters: NotificationSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/Notification/send`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GeneralNotificationToJSON(requestParameters.generalNotification),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async notificationSendPost(requestParameters: NotificationSendPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.notificationSendPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async notificationsNextGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpcomingNotificationsModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Notifications/next`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UpcomingNotificationsModelFromJSON(jsonValue));
    }

    /**
     */
    async notificationsNextGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpcomingNotificationsModel> {
        const response = await this.notificationsNextGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async notificationsSendPostRaw(requestParameters: NotificationsSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/Notifications/send`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GeneralNotificationToJSON(requestParameters.generalNotification),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async notificationsSendPost(requestParameters: NotificationsSendPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.notificationsSendPostRaw(requestParameters, initOverrides);
    }

}
