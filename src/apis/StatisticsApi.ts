/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Album,
  CreateTrackPlayedEventsCommandEvent,
  GetYearInReviewOverviewSlide,
  Track,
} from '../models';
import {
    AlbumFromJSON,
    AlbumToJSON,
    CreateTrackPlayedEventsCommandEventFromJSON,
    CreateTrackPlayedEventsCommandEventToJSON,
    GetYearInReviewOverviewSlideFromJSON,
    GetYearInReviewOverviewSlideToJSON,
    TrackFromJSON,
    TrackToJSON,
} from '../models';

export interface StatisticsGlobalAlbumDownloadedMostGetRequest {
    size?: number;
    from?: number;
}

export interface StatisticsGlobalTrackDownloadedMostGetRequest {
    size?: number;
    from?: number;
}

export interface StatisticsTrackPlayedPostRequest {
    createTrackPlayedEventsCommandEvent?: Array<CreateTrackPlayedEventsCommandEvent>;
}

/**
 * 
 */
export class StatisticsApi extends runtime.BaseAPI {

    /**
     */
    async statisticsGlobalAlbumDownloadedMostGetRaw(requestParameters: StatisticsGlobalAlbumDownloadedMostGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Album>>> {
        const queryParameters: any = {};

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.from !== undefined) {
            queryParameters['from'] = requestParameters.from;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/global/album/downloaded/most`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AlbumFromJSON));
    }

    /**
     */
    async statisticsGlobalAlbumDownloadedMostGet(requestParameters: StatisticsGlobalAlbumDownloadedMostGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Album>> {
        const response = await this.statisticsGlobalAlbumDownloadedMostGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async statisticsGlobalTrackDownloadedMostGetRaw(requestParameters: StatisticsGlobalTrackDownloadedMostGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Track>>> {
        const queryParameters: any = {};

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.from !== undefined) {
            queryParameters['from'] = requestParameters.from;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/global/track/downloaded/most`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TrackFromJSON));
    }

    /**
     */
    async statisticsGlobalTrackDownloadedMostGet(requestParameters: StatisticsGlobalTrackDownloadedMostGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Track>> {
        const response = await this.statisticsGlobalTrackDownloadedMostGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async statisticsTrackPlayedPostRaw(requestParameters: StatisticsTrackPlayedPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/Statistics/track/played`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.createTrackPlayedEventsCommandEvent?.map(CreateTrackPlayedEventsCommandEventToJSON),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async statisticsTrackPlayedPost(requestParameters: StatisticsTrackPlayedPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.statisticsTrackPlayedPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async statisticsWrappedGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/wrapped`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async statisticsWrappedGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.statisticsWrappedGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async statisticsYearInReviewFkGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/year-in-review/fk`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async statisticsYearInReviewFkGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.statisticsYearInReviewFkGetRaw(initOverrides);
    }

    /**
     */
    async statisticsYearInReviewHoursGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/year-in-review/hours`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async statisticsYearInReviewHoursGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.statisticsYearInReviewHoursGetRaw(initOverrides);
    }

    /**
     */
    async statisticsYearInReviewOverviewGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetYearInReviewOverviewSlide>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/year-in-review/overview`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetYearInReviewOverviewSlideFromJSON));
    }

    /**
     */
    async statisticsYearInReviewOverviewGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetYearInReviewOverviewSlide>> {
        const response = await this.statisticsYearInReviewOverviewGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async statisticsYearInReviewSongsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/year-in-review/songs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async statisticsYearInReviewSongsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.statisticsYearInReviewSongsGetRaw(initOverrides);
    }

}
